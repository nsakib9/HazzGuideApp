import React, { useState } from "react";
import { View, Text, ScrollView, StyleSheet, TouchableOpacity } from "react-native";
import Icon from "react-native-vector-icons/FontAwesome";

const dailyPlans = [
  {
    id: 1,
    dayHeader: "‡ßÆ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ - ‡¶Æ‡¶ø‡¶®‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ",
    dateInfo: "‡ßÆ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ / ‡ßß‡ß™ ‡¶ú‡ßÅ‡¶® ‡ß®‡ß¶‡ß®‡ß´",
    primaryRituals: ["‡¶á‡¶π‡¶∞‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶ß‡¶æ‡¶®", "‡¶Æ‡¶ø‡¶®‡¶æ‡¶Ø‡¶º ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®"],
    optionalActivities: ["‡¶®‡¶´‡¶≤ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú", "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§"],
    checklist: ["‡¶™‡¶æ‡¶•‡¶∞ ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π"],
    dua: "‡¶π‡ßá ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π! ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶π‡¶ú‡ßç‡¶¨ ‡¶ï‡¶¨‡ßÅ‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
    motivationalQuote: "‚Äú‡¶π‡¶ú‡ßç‡¶¨ ‡¶π‡¶≤‡ßã ‡¶Ü‡¶§‡ßç‡¶Æ‡¶∂‡ßÅ‡¶¶‡ßç‡¶ß‡¶ø‡¶∞ ‡¶è‡¶ï ‡¶Æ‡¶π‡¶æ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó‡•§‚Äù",
  },
  {
    id: 2,
    dayHeader: "‡ßØ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ - ‡¶Ü‡¶∞‡¶æ‡¶´‡¶æ‡¶§‡ßá ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®",
    dateInfo: "‡ßØ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ / ‡ßß‡ß´ ‡¶ú‡ßÅ‡¶® ‡ß®‡ß¶‡ß®‡ß´",
    primaryRituals: ["‡¶Ü‡¶∞‡¶æ‡¶´‡¶æ‡¶§‡ßá ‡¶ñ‡ßÅ‡¶§‡¶¨‡¶æ ‡¶∂‡ßã‡¶®‡¶æ", "‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º"],
    optionalActivities: ["‡¶¶‡ßã‡¶Ø‡¶º‡¶æ ‡¶ì ‡¶á‡¶∏‡ßç‡¶§‡¶ø‡¶ó‡¶´‡¶æ‡¶∞", "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§"],
    checklist: ["‡¶Ü‡¶∞‡¶æ‡¶´‡¶æ‡¶§‡ßá ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‚úÖ"],
    dua: "‡¶π‡ßá ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π! ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
    motivationalQuote: "‚Äú‡¶Ü‡¶∞‡¶æ‡¶´‡¶æ‡¶§‡ßá‡¶∞ ‡¶¶‡¶ø‡¶® ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ ‡¶ï‡¶¨‡ßÅ‡¶≤‡ßá‡¶∞ ‡¶∂‡ßç‡¶∞‡ßá‡¶∑‡ßç‡¶† ‡¶∏‡¶Æ‡¶Ø‡¶º‡•§‚Äù",
  },
  {
    id: 3,
    dayHeader: "‡ßß‡ß¶ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ - ‡¶ï‡ßÅ‡¶∞‡¶¨‡¶æ‡¶®‡¶ø ‡¶ì ‡¶ú‡¶æ‡¶Æ‡¶æ‡¶∞‡¶æ‡¶§‡ßá ‡¶ï‡¶ô‡ßç‡¶ï‡¶∞ ‡¶®‡¶ø‡¶ï‡ßç‡¶∑‡ßá‡¶™",
    dateInfo: "‡ßß‡ß¶ ‡¶ú‡¶ø‡¶≤‡¶π‡¶ú‡ßç‡¶¨ / ‡ßß‡ß¨ ‡¶ú‡ßÅ‡¶® ‡ß®‡ß¶‡ß®‡ß´",
    primaryRituals: ["‡¶ï‡ßÅ‡¶∞‡¶¨‡¶æ‡¶®‡¶ø", "‡¶ú‡¶æ‡¶Æ‡¶æ‡¶∞‡¶æ‡¶§‡ßá ‡¶ï‡¶ô‡ßç‡¶ï‡¶∞ ‡¶®‡¶ø‡¶ï‡ßç‡¶∑‡ßá‡¶™"],
    optionalActivities: ["‡¶§‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶´", "‡¶∏‡¶æ‡¶à"],
    checklist: ["‡¶ï‡ßÅ‡¶∞‡¶¨‡¶æ‡¶®‡¶ø ‚úÖ", "‡¶ï‡¶ô‡ßç‡¶ï‡¶∞ ‡¶®‡¶ø‡¶ï‡ßç‡¶∑‡ßá‡¶™ ‚úÖ"],
    dua: "‡¶π‡ßá ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π! ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶§‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶¨‡ßÅ‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
    motivationalQuote: "‚Äú‡¶§‡ßç‡¶Ø‡¶æ‡¶ó‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶®‡ßà‡¶ï‡¶ü‡ßç‡¶Ø ‡¶Ö‡¶∞‡ßç‡¶ú‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§‚Äù",
  },
  // Add more days as needed
];

export default function DailyPlannerScreen() {
  const [checkedItems, setCheckedItems] = useState({});

  const toggleCheck = (dayId, item) => {
    setCheckedItems((prev) => ({
      ...prev,
      [dayId]: {
        ...prev[dayId],
        [item]: !prev[dayId]?.[item],
      },
    }));
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.header}>‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶™‡¶∞‡¶ø‡¶ï‡¶≤‡ßç‡¶™‡¶®‡¶æ</Text>
      {dailyPlans.map((plan) => (
        <View key={plan.id} style={styles.card}>
          <Text style={styles.dayHeader}>{plan.dayHeader}</Text>
          <Text style={styles.dateInfo}>{plan.dateInfo}</Text>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>
              <Icon name="check-circle" size={16} color="#047857" /> ‡¶¨‡¶æ‡¶ß‡ßç‡¶Ø‡¶§‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶á‡¶¨‡¶æ‡¶¶‡¶§
            </Text>
            {plan.primaryRituals.map((ritual, index) => (
              <Text key={index} style={styles.listItem}>
                üïã {ritual}
              </Text>
            ))}
          </View>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>
              <Icon name="star" size={16} color="#047857" /> ‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§ ‡¶ì ‡¶®‡¶´‡¶≤
            </Text>
            {plan.optionalActivities.map((activity, index) => (
              <Text key={index} style={styles.listItem}>
                üìø {activity}
              </Text>
            ))}
          </View>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>
              <Icon name="tasks" size={16} color="#047857" /> ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
            </Text>
            {plan.checklist.map((item, index) => (
              <TouchableOpacity
                key={index}
                onPress={() => toggleCheck(plan.id, item)}
                style={styles.checklistItem}
              >
                <Text style={styles.listItem}>
                  {checkedItems[plan.id]?.[item] ? "‚úÖ" : "‚¨ú"} {item}
                </Text>
              </TouchableOpacity>
            ))}
          </View>

          <View style={styles.section}>
            <Text style={styles.sectionTitle}>
              <Icon name="heart" size={16} color="#047857" /> ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ
            </Text>
            <Text style={styles.dua}>{plan.dua}</Text>
          </View>

          <Text style={styles.motivationalQuote}>
            üåô {plan.motivationalQuote}
          </Text>
        </View>
      ))}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#F3F4F6",
    padding: 16,
  },
  header: {
    fontSize: 24,
    fontWeight: "bold",
    color: "#047857",
    textAlign: "center",
    marginBottom: 16,
  },
  card: {
    backgroundColor: "#FFFFFF",
    borderRadius: 8,
    padding: 16,
    marginBottom: 16,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  dayHeader: {
    fontSize: 20,
    fontWeight: "bold",
    color: "#047857",
    marginBottom: 8,
  },
  dateInfo: {
    fontSize: 14,
    color: "#6B7280",
    marginBottom: 16,
  },
  section: {
    marginBottom: 16,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: "bold",
    color: "#047857",
    marginBottom: 8,
  },
  listItem: {
    fontSize: 14,
    color: "#4B5563",
    marginBottom: 4,
  },
  checklistItem: {
    flexDirection: "row",
    alignItems: "center",
  },
  dua: {
    fontSize: 14,
    fontStyle: "italic",
    color: "#4B5563",
  },
  motivationalQuote: {
    fontSize: 14,
    color: "#6B7280",
    textAlign: "center",
    marginTop: 16,
    fontStyle: "italic",
  },
});